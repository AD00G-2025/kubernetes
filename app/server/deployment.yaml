apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
  namespace: todo-app
  labels:
    app: todo-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: todo-server
  template:
    metadata:
      labels:
        app: todo-server
    spec:
      containers:
        - name: server
          image: robersonandrade/todo-server:latest
          ports:
            - containerPort: 3001
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-postgresql
                  key: POSTGRES_PASSWORD
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: PORT
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: NODE_ENV
            - name: CORS_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: server-config
                  key: CORS_ORIGIN
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
            - name: JWT_EXPIRES_IN
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_EXPIRES_IN
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 5
      restartPolicy: Always
